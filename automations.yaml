# Leaving Home - Turn Everything Off #
- alias: Family Leave
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.family
    from: 'home'
    to: 'not_home'
    for: '00:10:00'
  action:
    - service: homeassistant.turn_off
      entity_id:
        - group.all_lights
        - switch.lr_fan_switch
        - group.chromecast
    - service: lock.lock
      entity_id:
        - lock.front_door_lock
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.aarlo_home
    - service: notify.notify_family
      data:
        title: 'HA Notification'
        message: 'Everyone has left the house. Locking up, turning off lights, stopping all Chromecasts, and arming alarm.'

# Amy Leave Notify
- alias: Amy leave
  id: amy_leave
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: person.amy
    from: 'home'
    to: 'not_home'
    for: '00:10:00'
  action:
    - service: notify.notify_zak
      data:
        title: 'HA Person Tracker'
        message: 'Amy has left you.'

# Kids Leaving
- alias: Kids Leave
  id: kids_leave_notify
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - device_tracker.Camryn
      - device_tracker.Chelsea
    from: 'home'
    to: 'not_home'
    for: '00:10:00'
  action:
    - service: notify.notify_family
      data_template:
        title: 'HA Person Tracker'
        message:  >
          {% set person = trigger.entity_id.split('.')[1]|replace('_', ' ')%}
          {%- macro txt_sentence(person) -%}
          {{ person + " has been offline for at least 10 minutes." }}
          {%- endmacro -%}
          {{txt_sentence(person)}}
        
# Greet the family
- alias: Family Home
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - device_tracker.Amy
      - device_tracker.Zak
      - device_tracker.Camryn
      - device_tracker.Chelsea
      - device_tracker.Clayton
    from: 'not_home'
    to: 'home'
    for: '00:01:00'
  action:
    - service: tts.google_say
      entity_id:
        - media_player.kitchen_display
        - media_player.office_home
      # Borrowed from Carlo Costanzo https://github.com/CCOSTAN/Home-AssistantConfig#logo
      data_template:
        message:  >
          {% set person = trigger.entity_id.split('.')[1]|replace('_', ' ')%}
          {%- macro greeting_sentence(person) -%}
          {{ [
          "Welcome back home " ~ person,
          "Guess who is home?" ~ person + " is!",
          person + " is now in the house.",
          "Welcome Home " ~ person + ".  We have missed you. Or at least I did.",
          "Our home is now complete, Rest your head and relax your feet! Welcome Back " ~ person,
          "Life is like a song, youâ€™re back where you belong. Welcome home " ~ person,
          "Hey there " ~ person + " Welcome Home!",
          "Knock Knock. Who is There? "   ~ person +" is!",
          "The garage door opener just told me that "   ~ person +" is home.",
          person + " can not hide from the system. Welcome home.",
          person ~ "! You are home!",
          "I know a secret! "  ~ person +" is home!",
          "Hey "  ~ person +". Your arrival has been recorded by the Smartest house on the block.",
          "Take note! "  ~ person +" is home.",
          "I am sensing a disturbance in the force. "  ~ person +" must be home!",
          "And the house becomes a home. Welcome back " ~ person,
          person + " is now here.  Hash tag Welcome Home.",
          person + " is now here.  Hash tag Home.",
          person + " is now here.  Hash tag Smart Home.",
          "Just a quick announcement. " ~ person +" has arrived!",
          "Pardon the interruption but " ~ person +" is home!",
          "My systems are picking up the presence of additional humans. " ~ person +" has been identified as home."
          ] | random }}
          {%- endmacro -%}
          {{greeting_sentence(person)}}
        cache: false

# Home Assistant Backup
- alias: Backup HA
  initial_state: 'on'
  trigger:
    platform: time
    at: '22:00:00'
  action:
    - service: tts.google_say
      entity_id: media_player.office_home
      data:
        message: "Home Assistant backup has started!"
        cache: false
    - service: shell_command.backupha
    - service: notify.notify_zak
      data:
        title: 'HA Notice'
        message: 'HA Backup has started.'

 # Home Assistant Backup - Notify when complete   
- alias: Notify backup complete
  id: backup_complete
  initial_state: 'on'    
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: modified
  action:
    - service: persistent_notification.create
      data:
        message: "Backup has completed! {{ now() }}"
        title: "Home Assistant Backup Alert" 
    - service: tts.google_say
      entity_id: media_player.office_home
      data:
        message: "Home Assistant backup has completed!"
        cache: false        
# Set Log level dynamically 
#
- alias: Set Log Level
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - input_select.log_level
  action:
    - service: logger.set_level
      data_template:
        homeassistant.components: "{{ states.input_select.log_level.state }}"


# No activity turn off LR lights
- alias: No Activity Kill LR
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.living_room_motion
    from: 'on'
    to: 'off'
    for: 00:15:00
  action:
  - service: homeassistant.turn_off
    entity_id:
    - switch.lr_fan_switch
  - service: light.lifx_set_state
    entity_id:
    - light.lr_lamp_1
    - light.lr_lamp_2
    data:
      transition: 30
      power: false

# Turn on LR lights when there is activity @ Dark
- id: DFHIDFHOSIYHFD
  alias: Activity Turn on LR Lights
  initial_state: 'on'
  trigger:
  - entity_id:
    - binary_sensor.living_room_motion
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - after: sunset
    before: sunrise
    condition: sun
  action:
  - entity_id:
    - switch.lr_fan_switch
    service: homeassistant.turn_on
  - data:
      brightness_pct: 100
      power: true
      transition: 30
    entity_id:
    - light.lr_lamp_1
    - light.lr_lamp_2
    service: light.lifx_set_state
        
# Turn off Bedroom lights if there is no motion
- alias: No Activity Kill BR
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.bedroom_motion
    from: 'on'
    to: 'off'
    for: 00:15:00
  action:
  - service: light.turn_off
    entity_id:
    - light.14107027cc50e34945a1
    - light.bedroom_hue
    - light.br_lifx

# Turn off Chromecast on school nights after @ midnight
- alias: Turn off Chromecast after time
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - media_player.chelseas_tv
      to: 'playing'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '11:59:00'
        before: '06:00:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: input_boolean.school_night
        state: 'on'
  action:
    - service: media_player.turn_off
      entity_id: media_player.chelseas_tv

# Set School Night input to 'off' if school is closed
# School is closed is determined by command line sensor
# sensor.school_weather_status (scripts/school_closing.py)
- alias: Set School Night Weather
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - sensor.school_weather_status
      to: Closed
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.school_night
        
# Homeassistant can't handle vivaldi running constantly. It eats up all the RAM
# If total memory usage hits 75% we need to kill the process.
# Really just need to add RAM to the pi :D
- alias: Kill Vivaldi
  initial_state: 'off'
  trigger:
  - platform: template
    value_template: "{% if states.sensor.memory_use_percent.state | float > 75.0 %} true {% endif %}"
  action:
    - service: tts.google_say
      entity_id: media_player.office_home
      data:
        message: "Home Assistant is running low on memory. Killing Vivaldi."
        cache: false  
    - service: shell_command.kill_vivaldi

# Test Notify
- alias: Notify_Zak
  id: notify_zak
  initial_state: 'off'
  trigger:
  - entity_id:
    - binary_sensor.living_room_motion
    from: 'off'
    platform: state
    to: 'on'
  action:
  - service: notify.notify_family
    data:
      title: 'Intruder alert'
      message: 'Intruder alert at apartment!!'
#      data:
#        images:
#          - 'http://192.168.2.76/image/jpeg.cgi'
#                    - /home/pi/snapshot2.jpg