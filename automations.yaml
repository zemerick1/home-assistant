# Leaving Home - Turn Everything Off #
- alias: Family Leave
  trigger:
    platform: state
    entity_id: group.family
    from: 'home'
    to: 'not_home'
    for:
      minutes: 10
  action:
    - service: homeassistant.turn_off
      entity_id:
        - group.all_lights
        - switch.lr_fan_switch
        - group.chromecast

# Greet the family
- alias: Family Home
  trigger:
    platform: state
    entity_id:
      - device_tracker.Amy
      - device_tracker.Zak
      - device_tracker.Camryn
      - device_tracker.Chelsea
      - device_tracker.Clayton
    from: 'not_home'
    to: 'home'
    for: '00:01:00'
  action:
    - service: tts.google_say
      entity_id:
        - media_player.kitchen_display
        - media_player.office_home
      # Borrowed from Carlo Costanzo https://github.com/CCOSTAN/Home-AssistantConfig#logo
      data_template:
        message:  >
          {% set person = trigger.entity_id.split('.')[1]|replace('_', ' ')%}
          {%- macro greeting_sentence(person) -%}
          {{ [
          "Welcome back home " ~ person,
          "Guess who is home?" ~ person +" is!",
          person + " is now in the house.",
          "Welcome Home " ~ person + ".  We have missed you. Or at least I did.",
          "Our home is now complete, Rest your head and relax your feet! Welcome Back " ~ person,
          "Life is like a song, youâ€™re back where you belong. Welcome home " ~ person,
          "Hey there " ~ person + " Welcome Home!",
          "Knock Knock. Who is There? "   ~ person +" is!",
          "The garage door opener just told me that "   ~ person +" is home.",
          person + " can not hide from the system. Welcome home.",
          person ~ "! You are home!",
          "I know a secret! "  ~ person +" is home!",
          "Hey "  ~ person +". Your arrival has been recorded by the Smartest house on the block.",
          "Take note! "  ~ person +" is home.",
          "I am sensing a disturbance in the force. "  ~ person +" must be home!",
          "And the house becomes a home. Welcome back " ~ person,
          person + " is now here.  Hash tag Welcome Home.",
          person + " is now here.  Hash tag Home.",
          person + " is now here.  Hash tag Smart Home.",
          "Just a quick announcement. " ~ person +" has arrived!",
          "Pardon the interruption but " ~ person +" is home!",
          "My systems are picking up the presence of additional humans. " ~ person +" has been identified as home."
          ] | random }}
          {%- endmacro -%}
          {{greeting_sentence(person)}}
        cache: false

# Home Assistant Backup
- alias: Backup HA
  trigger:
    platform: time
    at: '22:00:00'
  action:
    - service: tts.google_say
      entity_id: media_player.office_home
      data:
        message: "Home Assistant backup has started!"
        cache: false
    - service: shell_command.backupha

 # Home Assistant Backup - Notify when complete   
- alias: Notify backup complete    
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: modified
  action:
    - service: persistent_notification.create
      data:
        message: "Backup has completed! {{ now() }}"
        title: "Home Assistant Backup Alert" 
    - service: tts.google_say
      entity_id: media_player.office_home
      data:
        message: "Home Assistant backup has completed!"
        cache: false        
# Set Log level dynamically 
#
- alias: Set Log Level
  trigger:
    platform: state
    entity_id:
      - input_select.log_level
  action:
    - service: logger.set_level
      data_template:
        homeassistant.components: "{{ states.input_select.log_level.state }}"


# No activity turn off LR lights
- alias: No Activity Kill LR
  trigger:
    platform: state
    entity_id:
    - sensor.living_room
    from: active
    to: inactive
    for: 00:15:00
  action:
  - service: homeassistant.turn_off
    entity_id:
    - switch.lr_fan_switch
  - service: light.lifx_set_state
    entity_id:
    - light.lr_lamp_1
    - light.lr_lamp_2
    data:
      transition: 30
      power: false

# Turn on LR lights when there is activity @ Dark
- alias: Activity Turn on LR Lights
  trigger:
    platform: state
    entity_id:
    - sensor.living_room
    from: inactive
    to: active
  condition:
    - condition: or
      conditions:
        - condition: sun
          after: sunset
        - condition: sun
          before: sunrise    
  action:
  - service: homeassistant.turn_on
    entity_id:
    - switch.lr_fan_switch
  - service: light.lifx_set_state
    entity_id:  
    - light.lr_lamp_1
    - light.lr_lamp_2
    data:
      transition: 30
      brightness_pct: 100
      power: true
        
 
# Turn off Chromecast on school nights after @ midnight
- alias: Turn off Chromecast after time
  trigger:
    - platform: state
      entity_id:
        - media_player.chelseas_tv
      to: 'playing'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '11:59:00'
        before: '06:00:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: input_boolean.school_night
        state: 'on'
  action:
    - service: media_player.turn_off
      entity_id: media_player.chelseas_tv

# Set School Night input to 'off' if school is closed
# School is closed is determined by command line sensor
# sensor.school_weather_status (scripts/school_closing.py)
- alias: Set School Night Weather
  trigger:
    - platform: state
      entity_id:
        - sensor.school_weather_status
      to: Closed
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.school_night
        
